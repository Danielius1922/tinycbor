# Build on Linux with CMake and execute tests

name: CMake building linux

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  # branches: [master]
  # pull_request:
  # branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      clang:
        description: "Compile using clang"
        required: false
        type: boolean
        default: false

jobs:
  cmake_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - args: "-DCMAKE_BUILD_TYPE=Debug -DENABLE_TOOLS=ON"
          - args: "-DCMAKE_BUILD_TYPE=Debug -DTINYCBOR_FREESTANDING_BUILD_ENABLED=ON -DENABLE_TOOLS=ON"
          - args: "-DCMAKE_BUILD_TYPE=Debug -DUSE_SHARED_TINYCBOR_LIBRARY=ON -DENABLE_TOOLS=ON"
          - args: "-DCMAKE_BUILD_TYPE=Debug -DUSE_SHARED_TINYCBOR_LIBRARY=ON -DUSE_STATIC_TINYCBOR_LIBRARY=OFF -DENABLE_TOOLS=ON"
          - args: "-DCMAKE_BUILD_TYPE=Release -DENABLE_TOOLS=ON"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine compiler
        id: cmake_flags
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.clang }}
        run: |
          echo compiler='-DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang' >> $GITHUB_OUTPUT

      - name: Install Qt5 for tests
        uses: jurplel/install-qt-action/@v3

      - name: Build unit tests
        run: |
          mkdir build && cd build
          cmake -DCMAKE_VERBOSE_MAKEFILE=ON ${{ steps.cmake_flags.outputs.compiler }} -DENABLE_TESTING=ON ..
          cmake --build .

      - name: Run unit tests
        run: |
          cd build
          ctest --verbose
